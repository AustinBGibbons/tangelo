function {{NAME}}() {
  
  var vis = {},
      data = {},
      scales = {},
      encoders = {},
      marks = [],
      axes = [],
      el = null,
      dom = null,
      width = {{WIDTH}},
      height = {{HEIGHT}},
      padding = {{PADDING}},
      duration = {{DURATION}};

  vis.el = function(value) {
    if (!arguments.length) return el;
    el = value;
    return vis;
  };

  vis.data = function(value) {
    if (!arguments.length) return data;
    for (var name in value) data[name] = value[name];
    return vis.updateData();
  };
  
  vis.width = function(value) {
    if (!arguments.length) return width;
    width = value;
    return vis;
  };

  vis.height = function(value) {
    if (!arguments.length) return height;
    height = value;
    return vis;
  };

  vis.padding = function(value) {
    if (!arguments.length) return padding;
    padding = value;
    return vis;
  };

  vis.duration = function(value) {
    if (!arguments.length) return duration;
    duration = value;
    return vis;
  };

  vis.load = function(callback) {
{{LOAD_DATA}}  };
  
  vis.init = function() {
    vis.updateScales();
{{INIT_ENCODERS}}
{{INIT_AXES}}
{{INIT_DOM}}
    return vis.initMarks();
  };

  vis.initMarks = function() {
{{INIT_MARKS}}
    return vis;
  };

  vis.updateData = function() {
{{UPDATE_DATA}}    return vis;
  };

  vis.update = function(dur, marks) {
    return vis.updateAxes(dur).updateMarks(dur, marks);
  };

  vis.updateScales = function() {
{{INIT_SCALES}}    return vis;
  };

  vis.updateAxes = function(dur) {
{{UPDATE_AXES}}    return vis;
  };

  vis.updateMarks = function(duration, idx) {
    (idx===undefined ? d3.range(marks.length) 
      : Array.isArray(idx) ? idx : [idx]).forEach(function(index) {
      if (marks[index]) marks[index](duration);
    });
    return vis;
  };
  
  // for debugging
  vis.scales = scales;
  vis.encoders = encoders;
  vis.axes = axes;
  
  return vis;
}