#!${PYTHON_EXECUTABLE}

import os
import signal
import subprocess
import sys
import time

def start():
    sys.stderr.write("starting tangelo...")
    if os.path.exists(pidfile):
        sys.stderr.write("failed\n")
        sys.stderr.write("error: tangelo already seems to be running\n")
        return 1

    devnull = open(os.devnull)

    os.chdir(path)
    args = [sys.executable, cherry,
        "-i", "tangelo",
        "-c", "server.conf",
        "-P", path]
    if not is_windows:
        args += ["-d", "-p", pidfile]
    retval = subprocess.call(args, stdout=devnull, stderr=devnull)

    if not is_windows:
        f = open(logfile)
        f.seek(0, 2)
        done = False
        while not done:
            time.sleep(1)
            cur_pos = f.tell()
            line = f.readline()
            if not line:
                f.seek(cur_pos)
            else:
                if "Bus STARTED" in line:
                    retval = 0
                    sys.stderr.write("success\n")
                    done = True
                elif "Error" in line:
                    retval = 1
                    sys.stderr.write("failed\n")
                    sys.stderr.write("error: could not start tangelo - check error.log\n")
                    done = True
    else:
        sys.stderr.write("running\n")

    return retval

def stop(report=True):
    retval = 0

    if os.path.exists(pidfile):
        f = open(pidfile)

        try:
            pid = int(f.read())
        except ValueError:
            if report:
                sys.stderr.write("error: tangelo.pid does not contain a valid process id\n")
            return 1

        try:
            os.kill(pid, signal.SIGKILL)
        except OSError:
            retval = 1

        os.remove(pidfile)

    if report:
        if retval == 0:
            sys.stderr.write("tangelo stopped succesfully\n")
        else:
            sys.stderr.write("error: tangelo could not be stopped\n")

    return retval

def restart():
    stopval = stop()
    if stopval == 0:
        return start()
    else:
        return stopval

def usage():
    sys.stderr.write("usage: tangelo [start|stop|restart]\n")

# Read the action argument.
if len(sys.argv) < 2:
    usage()
    sys.exit(1)

# Configured variables.
cherry = "@CherryPy_EXECUTABLE@"
is_windows = @is_windows@

# Determine the path to this script.
path = os.path.dirname(os.path.abspath(sys.argv[0]))
pidfile = path + "/tangelo.pid"
logfile = path + "/error.log"

# Dispatch on action argument.
action = sys.argv[1]
code = 1
if action == "start":
    code = start()
elif action == "stop":
    if is_windows:
        sys.stderr.write("error: stop action not supported on Windows\n")
        sys.exit(1)
    code = stop()
elif action == "restart":
    if is_windows:
        sys.stderr.write("error: restart action not supported on Windows\n")
        sys.exit(1)
    code = restart()
else:
    usage()
    code = 1

sys.exit(code)
